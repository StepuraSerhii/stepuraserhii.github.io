(function (d, s, u, e, p) {
  p = d.getElementsByTagName(s)[0];
  e = d.createElement(s);
  e.async = 1;
  e.src = u;
  p.parentNode.insertBefore(e, p);
})(document, 'script', 'https://script.ringostat.com/v4/1b/1b754cb63e621f14d71ac9233d0ba04a7fd8a22a.js');

// –û—á—ñ–∫—É—î–º–æ, –ø–æ–∫–∏ —Å–∫—Ä–∏–ø—Ç –∑–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç—å—Å—è —ñ —ñ–Ω—ñ—Ü—ñ–∞–ª—ñ–∑—É—î–º–æ —Ñ—É–Ω–∫—Ü—ñ—é
var pw = function () {
  if (typeof (ringostatAnalytics) === "undefined") {
    setTimeout(pw, 100); // –ø–æ–≤—Ç–æ—Ä—é—î–º–æ —á–µ—Ä–µ–∑ 100 –º—Å
  } else {
    ringostatAnalytics.sendHit('pageview');
  }
};
pw();

document.addEventListener("DOMContentLoaded", () => {
  const burger = document.getElementById("burger");
  const menu = document.getElementById("navLinks");
  const navLinks = document.querySelectorAll(".nav-links a");

  // –ü–µ—Ä–µ–º–∏–∫–∞–Ω–Ω—è –º–µ–Ω—é –Ω–∞ –º–æ–±—ñ–ª—å–Ω–∏—Ö
  burger?.addEventListener("click", () => {
    menu?.classList.toggle("active");
  });

  // –ó–∞–∫—Ä–∏—Ç—Ç—è –º–µ–Ω—é –ø—ñ—Å–ª—è –ø–µ—Ä–µ—Ö–æ–¥—É –ø–æ –ø—É–Ω–∫—Ç—É
  navLinks.forEach(link => {
    link.addEventListener("click", () => {
      menu?.classList.remove("active");
    });
  });

  // –î–æ–¥–∞–≤–∞–Ω–Ω—è —Ç—ñ–Ω–µ–π –¥–æ –Ω–∞–≤–±–∞—Ä—É –ø—Ä–∏ —Å–∫—Ä–æ–ª—ñ
  const navbar = document.querySelector(".navbar");
  window.addEventListener("scroll", () => {
    if (window.scrollY > 20) {
      navbar?.classList.add("scrolled");
    } else {
      navbar?.classList.remove("scrolled");
    }
  });
});

// API –≤–∏–∫–ª–∏–∫ —á–µ—Ä–µ–∑ —Å–µ—Ä–≤–µ—Ä
document.getElementById("callButton")?.addEventListener("click", () => {
  const phoneNumber = document.getElementById("phone").value.trim();
  const authKey = document.getElementById("authKey").value.trim();
  const projectId = document.getElementById("projectId").value.trim();
  const schemeId = document.getElementById("schemeId").value.trim();
  const direction = document.getElementById("direction").value;  // –ù–∞–ø—Ä—è–º–æ–∫ –¥–∑–≤—ñ–Ω–∫–∞: 0 –∞–±–æ 1
  const callType = document.getElementById("callType").value;    // –¢–∏–ø –¥–∑–≤—ñ–Ω–∫–∞: 'in' –∞–±–æ 'out'

  if (!phoneNumber || !authKey || !projectId || !schemeId) {
    alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è");
    return;
  }

  console.log("üìû –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");

  fetch("http://localhost:3001/api/call", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({
      phoneNumber,
      authKey,
      projectId,
      schemeId,
      direction,  // –ù–∞–ø—Ä—è–º–æ–∫ –¥–∑–≤—ñ–Ω–∫–∞
      callType    // –¢–∏–ø –¥–∑–≤—ñ–Ω–∫–∞
    })
  })
    .then(response => response.json())
    .then(data => {
      console.log("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:", data);
      if (data.error) {
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞: " + data.error.message);
      } else {
        alert("‚úÖ –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–∫–ª–∏–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
        document.getElementById("phone").value = "";
        document.getElementById("authKey").value = "";
        document.getElementById("projectId").value = "";
        document.getElementById("schemeId").value = "";
      }
    })
    .catch(error => {
      console.error("‚ùó –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", error);
      alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç: " + error.message);
    });
});
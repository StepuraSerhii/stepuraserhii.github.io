// =========================
// üåê –ë–£–†–ì–ï–†-–ú–ï–ù–Æ –¢–ê –ù–ê–í–Ü–ì–ê–¶–Ü–Ø
// =========================
document.addEventListener("DOMContentLoaded", () => {
  const burger = document.getElementById("burger");
  const menu = document.getElementById("navLinks");
  const navLinks = document.querySelectorAll(".nav-links a");

  burger?.addEventListener("click", () => {
    menu?.classList.toggle("active");
  });

  navLinks.forEach(link => {
    link.addEventListener("click", () => {
      menu?.classList.remove("active");
    });
  });

  const navbar = document.querySelector(".navbar");
  window.addEventListener("scroll", () => {
    if (window.scrollY > 20) {
      navbar?.classList.add("scrolled");
    } else {
      navbar?.classList.remove("scrolled");
    }
  });
});

// =========================
// üìû API –í–ò–ö–õ–ò–ö (–ù–ï –ß–Ü–ü–ê–¢–ò: Ringostat Chat —Å–∫—Ä–∏–ø—Ç)
// =========================
(function (d,s,u,e,p) {
  p=d.getElementsByTagName(s)[0],e=d.createElement(s),e.async=1,e.src=u,p.parentNode.insertBefore(e, p);
})(document, 'script', 'https://script.ringostat.com/v4/1b/1b754cb63e621f14d71ac9233d0ba04a7fd8a22a.js');

var pw = function() {
  if (typeof(ringostatAnalytics) === "undefined") {
    setTimeout(pw, 100);
  } else {
    ringostatAnalytics.sendHit('pageview');
  }
}; 
pw();

// =========================
// ‚òéÔ∏è –û–ë–†–û–ë–ö–ê –í–ò–ö–õ–ò–ö–£ –ß–ï–†–ï–ó –õ–û–ö–ê–õ–¨–ù–ò–ô –°–ï–†–í–ï–†
// =========================
document.getElementById("callButton")?.addEventListener("click", () => {
  const phoneNumber = document.getElementById("phoneInput")?.value.trim();
  const authKey = document.getElementById("authKey")?.value.trim();

  if (!phoneNumber || !authKey) {
    alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å —É—Å—ñ –ø–æ–ª—è");
    return;
  }

  console.log("üìû –í—ñ–¥–ø—Ä–∞–≤–∫–∞ –∑–∞–ø–∏—Ç—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä...");

  fetch("http://localhost:3001/api/call", {
    method: "POST",
    headers: {
      "Content-Type": "application/json"
    },
    body: JSON.stringify({ phoneNumber, authKey })
  })
    .then(response => response.json())
    .then(data => {
      console.log("‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:", data);
      if (data.error) {
        alert("‚ùå –ü–æ–º–∏–ª–∫–∞: " + data.error.message);
      } else {
        alert("‚úÖ –ó–∞–ø–∏—Ç –Ω–∞ –≤–∏–∫–ª–∏–∫ –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ!");
      }
    })
    .catch(error => {
      console.error("‚ùó –ü–æ–º–∏–ª–∫–∞ –∑–∞–ø–∏—Ç—É:", error);
      alert("–ù–µ –≤–¥–∞–ª–æ—Å—è –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –∑–∞–ø–∏—Ç: " + error.message);
    });
});